import 'package:flutter/material.dart';import 'package:ideabox_2/core/app_export.dart';import 'package:ideabox_2/presentation/search_most_like_bottomsheet/search_most_like_bottomsheet.dart';import 'package:ideabox_2/presentation/submitted_idea_calender_filter_bottomsheet/submitted_idea_calender_filter_bottomsheet.dart';import 'package:ideabox_2/presentation/created_idea_additional_one_dialog/created_idea_additional_one_dialog.dart';import 'package:ideabox_2/presentation/created_idea_additional_two_dialog/created_idea_additional_two_dialog.dart';import 'package:ideabox_2/presentation/submitted_idea_action_bottomsheet/submitted_idea_action_bottomsheet.dart';import 'package:ideabox_2/presentation/submitted_idea_three_dialog/submitted_idea_three_dialog.dart';import 'package:ideabox_2/presentation/submitted_idea_one_dialog/submitted_idea_one_dialog.dart';import 'package:ideabox_2/presentation/submitted_idea_two_bottomsheet/submitted_idea_two_bottomsheet.dart';import 'package:ideabox_2/presentation/submitted_idea_five_bottomsheet/submitted_idea_five_bottomsheet.dart';import 'package:ideabox_2/presentation/submitted_idea_action_delete_dialog/submitted_idea_action_delete_dialog.dart';import 'package:ideabox_2/presentation/submitted_idea_action_delete_modal_dialog/submitted_idea_action_delete_modal_dialog.dart';import 'package:ideabox_2/presentation/submitted_idea_teams_actions_modal_dialog/submitted_idea_teams_actions_modal_dialog.dart';import 'package:ideabox_2/presentation/submitted_idea_teams_actions_modal_two_dialog/submitted_idea_teams_actions_modal_two_dialog.dart';import 'package:ideabox_2/presentation/submitted_idea_teams_actions_modal_one_dialog/submitted_idea_teams_actions_modal_one_dialog.dart';import 'package:ideabox_2/presentation/submitted_idea_calender_filter_one_bottomsheet/submitted_idea_calender_filter_one_bottomsheet.dart';import 'package:ideabox_2/presentation/talent_approval_bottomsheet/talent_approval_bottomsheet.dart';import 'package:ideabox_2/presentation/joined_idea_one_bottomsheet/joined_idea_one_bottomsheet.dart';import 'package:ideabox_2/presentation/submitted_idea_ten_dialog/submitted_idea_ten_dialog.dart';import 'package:ideabox_2/presentation/submitted_idea_nine_dialog/submitted_idea_nine_dialog.dart';import 'package:ideabox_2/presentation/talent_approval_comments_bottomsheet/talent_approval_comments_bottomsheet.dart';import 'package:ideabox_2/presentation/submitted_idea_seven_bottomsheet/submitted_idea_seven_bottomsheet.dart';import 'package:ideabox_2/presentation/submitted_idea_eight_bottomsheet/submitted_idea_eight_bottomsheet.dart';import 'package:ideabox_2/presentation/talent_approval_comments_one_bottomsheet/talent_approval_comments_one_bottomsheet.dart';import 'package:ideabox_2/presentation/joined_idea_teams_actions_four_dialog/joined_idea_teams_actions_four_dialog.dart';import 'package:ideabox_2/presentation/joined_idea_teams_actions_three_dialog/joined_idea_teams_actions_three_dialog.dart';import 'package:ideabox_2/presentation/joined_idea_teams_actions_two_dialog/joined_idea_teams_actions_two_dialog.dart';import 'package:ideabox_2/presentation/profile_my_profile_fourteen_dialog/profile_my_profile_fourteen_dialog.dart';import 'package:ideabox_2/presentation/filter_date_bottomsheet/filter_date_bottomsheet.dart';import 'package:ideabox_2/presentation/talent_management_bottomsheet/talent_management_bottomsheet.dart';import 'package:ideabox_2/presentation/dashboard_idea_filter_bottomsheet/dashboard_idea_filter_bottomsheet.dart';import 'package:ideabox_2/presentation/dashboard_idea_calender_bottomsheet/dashboard_idea_calender_bottomsheet.dart';import 'package:ideabox_2/presentation/dashboard_idea_action_bottomsheet/dashboard_idea_action_bottomsheet.dart';import 'package:ideabox_2/presentation/dashboard_talent_filter_two_bottomsheet/dashboard_talent_filter_two_bottomsheet.dart';import 'package:ideabox_2/presentation/action_delete_three_bottomsheet/action_delete_three_bottomsheet.dart';import 'package:ideabox_2/presentation/action_delete_two_dialog/action_delete_two_dialog.dart';import 'package:ideabox_2/presentation/action_delete_dialog/action_delete_dialog.dart';import 'package:ideabox_2/presentation/action_delete_four_bottomsheet/action_delete_four_bottomsheet.dart';import 'package:ideabox_2/presentation/action_delete_one_bottomsheet/action_delete_one_bottomsheet.dart';import 'package:ideabox_2/presentation/event_manag_one_bottomsheet/event_manag_one_bottomsheet.dart';import 'package:ideabox_2/presentation/category_management_add_category_one_dialog/category_management_add_category_one_dialog.dart';import 'package:ideabox_2/presentation/category_management_add_category_dialog/category_management_add_category_dialog.dart';import 'package:ideabox_2/presentation/filter_management_submission_bottomsheet/filter_management_submission_bottomsheet.dart';import 'package:ideabox_2/presentation/category_management_add_category_two_dialog/category_management_add_category_two_dialog.dart';import 'package:ideabox_2/presentation/action_management_submission_bottomsheet/action_management_submission_bottomsheet.dart';import 'package:ideabox_2/presentation/management_submission_two_dialog/management_submission_two_dialog.dart';import 'package:ideabox_2/presentation/management_submission_one_dialog/management_submission_one_dialog.dart';class AppNavigationScreen extends StatelessWidget {@override Widget build(BuildContext context) { return SafeArea(top: false, bottom: false, child: Scaffold(backgroundColor: ColorConstant.whiteA700, body: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("App Navigation", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20), child: Text("Check your app's UI from the below demo screens of your app.", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular16Bluegray4001))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.black900))])), Expanded(child: SingleChildScrollView(child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [GestureDetector(onTap: () {onTapOnboardingScreen(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Onboarding Screen", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapLogin(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Login", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSignUp(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Sign Up", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapIPhone1313ProOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("iPhone 13 / 13 Pro - One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapBtnpage(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Btn-page", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapLoginErrorState(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Login/Error State", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapLoginOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Login One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSearchSearchHistory(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Search/Search-History", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSearchMostLikeOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Search/Most-Like One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSearchMostComment(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Search/Most-Comment", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSearchMostProductive(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Search/Most-Productive", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSearchMostLike(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Search/Most-Like", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaSix(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea Six", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSearchSearchType(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Search/Search-Type", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapForgotPassword(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Forgot Password", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapForgotPasswordErrorState(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Forgot Password/Error State", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapChangePassword(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Change Password", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCalender(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Calender", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfile(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdea(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaCalenderFilter(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea/Calender Filter", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaAdditionalOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Additional One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepage(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaIdeaDescriptionOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Idea Description One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaStoryBehindOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Story-Behind One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaLeanCanvasTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Lean-Canvas Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaTeams(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Teams", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaAdditional(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Additional", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaAdditionalThree(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Additional Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaAdditionalTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Additional Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaIdeaDescription(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Idea Description", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaStoryBehind(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Story-Behind", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaLeanCanvasOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Lean-Canvas One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaAction(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea/Action", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedideaIdea(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted idea/Idea", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedideaStoryBehind(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted idea/Story Behind", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedideaLeanCanvas(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted idea/Lean Canvas", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaThree(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModal(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedideaTeamsActionsTabContainer(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted idea/Teams/Actions - Tab Container", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaLeanCanvas(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Lean-Canvas", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaFive(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea Five", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaActionDelete(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea/Action/Delete", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaActionDeleteModal(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea/Action/Delete/Modal", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedideaTeamsActionsModal(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted idea/Teams/Actions/Modal", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedideaTeamsActionsModalTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted idea/Teams/Actions/Modal Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedideaTeamsActionsModalOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted idea/Teams/Actions/Modal One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalThree(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapJoinedIdeaTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Joined Idea Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaCalenderFilterOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea/Calender Filter One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageSix(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage Six", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDetailIdeaIdeaDesc(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Detail Idea - Idea Desc", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDetailIdeaStoryBehind(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Detail Idea - Story Behind", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageSeven(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage Seven", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileThree(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentApprovalOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Approval One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentApprovalClickPending(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Approval - Click Pending", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentApproval(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Approval", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageEight(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage Eight", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileFour(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileOneTabContainer(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile One - Tab Container", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalBGFive(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-BG Five", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapJoinedIdeaOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Joined Idea One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapJoinedideaIdea(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Joined idea/Idea", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapJoinedideaStoryBehind(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Joined idea/Story Behind", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapJoinedideaLeanCanvas(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Joined idea/Lean Canvas", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaTen(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea Ten", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaNine(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea Nine", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapApproveRequestJoin(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Approve Request-Join", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentApprovalView(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Approval - View", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentApprovalStoryBehind(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Approval - Story Behind", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentApprovalTeamsTabContainer(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Approval - Teams - Tab Container", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentApprovalComments(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Approval - Comments", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapNotifApproveReq(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Notif-Approve-Req", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapRejectedRequestJoin(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Rejected Request-Join", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapNotifRejectReq(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Notif-Reject-Req", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileThree(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfile(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapActionDetailProfile(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Action/Detail Profile", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaSeven(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea Seven", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSubmittedIdeaEight(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Submitted Idea Eight", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalFour(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalBGFour(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-BG Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapApproveRequestLeave(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Approve Request-Leave", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentApprovalViewOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Approval - View One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentApprovalStoryBehindOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Approval - Story Behind One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentApprovalCommentsOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Approval - Comments One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapApproveLeaveReq(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Approve-Leave-Req", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapRejectedRequestLeave(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Rejected Request-Leave", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileNine(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Nine", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileFour(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapNotifRejectLeave(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Notif-Reject-Leave", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapJoinedideaTeamsActionsFour(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Joined idea/Teams/Actions Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapJoinedideaTeamsActionsThree(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Joined idea/Teams/Actions Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapJoinedideaTeamsActionsTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Joined idea/Teams/Actions Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapNotifLeaveIdea(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Notif-Leave-Idea", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileTen(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Ten", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileTwelve(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Twelve", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalSix(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal Six", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalMySelf(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-MySelf", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileFourteen(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Fourteen", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileSix(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Six", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileEight(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Eight", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalSkills(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-Skills", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalNine(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal Nine", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalSkillsOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-Skills One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalSeven(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal Seven", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileFive(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile Five", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileAdministrator(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Administrator", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileEleven(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Eleven", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageEleven(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage Eleven", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageNine(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage Nine", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageTen(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage Ten", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileThirteen(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Thirteen", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileFifteen(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Fifteen", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileSeven(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Seven", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileMyProfileFive(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile - My Profile Five", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalBGSix(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-BG Six", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalEight(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal Eight", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalFive(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal Five", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalBG(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-BG", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileSix(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile Six", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapIdeaManagThree(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Idea Manag Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapFilterDate(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Filter-Date", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentManagementOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Management One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapTalentManagement(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Talent Management", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDetailTalent(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Detail Talent", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDashboardIdea(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Dashboard-Idea", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDashboardTalent(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Dashboard-Talent", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDashboardIdeaFilter(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Dashboard-Idea-Filter", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDashboardIdeaCalender(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Dashboard-Idea-Calender", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDashboardIdeaAction(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Dashboard-Idea-Action", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDashboardTalentFilter(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Dashboard-Talent-Filter", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDashboardTalentFilterOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Dashboard-Talent-Filter One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDashboardTalentFilterTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Dashboard-Talent-Filter Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapActionDeleteThree(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Action-Delete Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapActionDeleteTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Action-Delete Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapActionDelete(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Action-Delete", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapADDTALENTOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("ADD-TALENTOne", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapADDTALENTTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("ADD-TALENTTwo", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapSignUpOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Sign Up One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapIdeaManagTabContainer(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Idea Manag - Tab Container", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCategoryManag(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Category Manag", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapActionDeleteFour(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Action-Delete Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapActionDeleteOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Action-Delete One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapEDITTALENTOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("EDIT-TALENTOne", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapEDITTALENTTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("EDIT-TALENTTwo", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageFive(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage Five", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageThree(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapHomepageFour(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Homepage Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapProfileTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Profile Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapEventManag(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Event Manag", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapEventManagOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Event Manag One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapEditEventOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Edit Event One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapEditEvent(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Edit Event", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapDetailCategory(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Detail Category", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCategoryManagementAddCategoryOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Category Management/Add Category One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCategoryManagementAddCategory(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Category Management/Add Category", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapAddEvent(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Add Event", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCreatedIdeaTeamsOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Created-Idea/Teams One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapAddanotherJourney(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Add another Journey", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapNotifDeleteCategory(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Notif-Delete-Category", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalAddCategoryOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-Add-Category One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalAddCategory(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-Add-Category", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapEventDescManagementSubmission(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Event Desc Management Submission", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapFilterManagementSubmission(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Filter Management Submission", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapManagementSubmission(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Management Submission", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalBGOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-BG One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapNotifSavedraft(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Notif-Save draft", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapAddanotherjourneyOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Add another journey One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapCategoryManagementAddCategoryTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Category Management/Add Category Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapActionManagementSubmission(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Action Management Submission", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalBGThree(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-BG Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapNotifUnsavePage(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Notif-Unsave Page", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalAddCategoryTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-Add-Category Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapManagementSubmissionTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Management Submission Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapManagementSubmissionOne(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Management Submission One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))]))), GestureDetector(onTap: () {onTapModalBGTwo(context);}, child: Container(width: getHorizontalSize(375.00), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("Modal-BG Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Container(height: getVerticalSize(1.00), width: getHorizontalSize(375.00), margin: getMargin(top: 5), decoration: BoxDecoration(color: ColorConstant.bluegray400))])))]))))]))); } 
onTapOnboardingScreen(BuildContext context) { Navigator.pushNamed(context, AppRoutes.onboardingScreen); } 
onTapLogin(BuildContext context) { Navigator.pushNamed(context, AppRoutes.loginScreen); } 
onTapSignUp(BuildContext context) { Navigator.pushNamed(context, AppRoutes.signUpScreen); } 
onTapIPhone1313ProOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.iphone1313ProOneScreen); } 
onTapBtnpage(BuildContext context) { Navigator.pushNamed(context, AppRoutes.btnPageScreen); } 
onTapLoginErrorState(BuildContext context) { Navigator.pushNamed(context, AppRoutes.loginErrorStateScreen); } 
onTapLoginOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.loginOneScreen); } 
onTapHomepageOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageOneScreen); } 
onTapSearchSearchHistory(BuildContext context) { Navigator.pushNamed(context, AppRoutes.searchSearchHistoryScreen); } 
onTapSearchMostLikeOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.searchMostLikeOneScreen); } 
onTapSearchMostComment(BuildContext context) { Navigator.pushNamed(context, AppRoutes.searchMostCommentScreen); } 
onTapSearchMostProductive(BuildContext context) { Navigator.pushNamed(context, AppRoutes.searchMostProductiveScreen); } 
onTapSearchMostLike(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>SearchMostLikeBottomsheet(),isScrollControlled: true); } 
onTapSubmittedIdeaSix(BuildContext context) { Navigator.pushNamed(context, AppRoutes.submittedIdeaSixScreen); } 
onTapSearchSearchType(BuildContext context) { Navigator.pushNamed(context, AppRoutes.searchSearchTypeScreen); } 
onTapForgotPassword(BuildContext context) { Navigator.pushNamed(context, AppRoutes.forgotPasswordScreen); } 
onTapForgotPasswordErrorState(BuildContext context) { Navigator.pushNamed(context, AppRoutes.forgotPasswordErrorStateScreen); } 
onTapChangePassword(BuildContext context) { Navigator.pushNamed(context, AppRoutes.changePasswordScreen); } 
onTapCalender(BuildContext context) { Navigator.pushNamed(context, AppRoutes.calenderScreen); } 
onTapProfile(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileScreen); } 
onTapSubmittedIdea(BuildContext context) { Navigator.pushNamed(context, AppRoutes.submittedIdeaScreen); } 
onTapSubmittedIdeaCalenderFilter(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>SubmittedIdeaCalenderFilterBottomsheet(),isScrollControlled: true); } 
onTapCreatedIdeaAdditionalOne(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: CreatedIdeaAdditionalOneDialog(),backgroundColor: Colors.transparent,)); } 
onTapHomepage(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageScreen); } 
onTapCreatedIdeaIdeaDescriptionOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaIdeaDescriptionOneScreen); } 
onTapCreatedIdeaStoryBehindOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaStoryBehindOneScreen); } 
onTapCreatedIdeaLeanCanvasTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaLeanCanvasTwoScreen); } 
onTapCreatedIdeaTeams(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaTeamsScreen); } 
onTapCreatedIdeaAdditional(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaAdditionalScreen); } 
onTapCreatedIdeaAdditionalThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaAdditionalThreeScreen); } 
onTapCreatedIdeaAdditionalTwo(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: CreatedIdeaAdditionalTwoDialog(),backgroundColor: Colors.transparent,)); } 
onTapCreatedIdeaIdeaDescription(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaIdeaDescriptionScreen); } 
onTapCreatedIdeaStoryBehind(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaStoryBehindScreen); } 
onTapCreatedIdeaLeanCanvasOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaLeanCanvasOneScreen); } 
onTapSubmittedIdeaAction(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>SubmittedIdeaActionBottomsheet(),isScrollControlled: true); } 
onTapSubmittedideaIdea(BuildContext context) { Navigator.pushNamed(context, AppRoutes.submittedIdeaIdeaScreen); } 
onTapSubmittedideaStoryBehind(BuildContext context) { Navigator.pushNamed(context, AppRoutes.submittedIdeaStoryBehindScreen); } 
onTapSubmittedideaLeanCanvas(BuildContext context) { Navigator.pushNamed(context, AppRoutes.submittedIdeaLeanCanvasScreen); } 
onTapSubmittedIdeaThree(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: SubmittedIdeaThreeDialog(),backgroundColor: Colors.transparent,)); } 
onTapSubmittedIdeaOne(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: SubmittedIdeaOneDialog(),backgroundColor: Colors.transparent,)); } 
onTapModalOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalOneScreen); } 
onTapModal(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalScreen); } 
onTapSubmittedideaTeamsActionsTabContainer(BuildContext context) { Navigator.pushNamed(context, AppRoutes.submittedIdeaTeamsActionsTabContainerScreen); } 
onTapCreatedIdeaLeanCanvas(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaLeanCanvasScreen); } 
onTapSubmittedIdeaTwo(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>SubmittedIdeaTwoBottomsheet(),isScrollControlled: true); } 
onTapSubmittedIdeaFive(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>SubmittedIdeaFiveBottomsheet(),isScrollControlled: true); } 
onTapSubmittedIdeaActionDelete(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: SubmittedIdeaActionDeleteDialog(),backgroundColor: Colors.transparent,)); } 
onTapSubmittedIdeaActionDeleteModal(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: SubmittedIdeaActionDeleteModalDialog(),backgroundColor: Colors.transparent,)); } 
onTapSubmittedideaTeamsActionsModal(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: SubmittedIdeaTeamsActionsModalDialog(),backgroundColor: Colors.transparent,)); } 
onTapSubmittedideaTeamsActionsModalTwo(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: SubmittedIdeaTeamsActionsModalTwoDialog(),backgroundColor: Colors.transparent,)); } 
onTapSubmittedideaTeamsActionsModalOne(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: SubmittedIdeaTeamsActionsModalOneDialog(),backgroundColor: Colors.transparent,)); } 
onTapModalThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalThreeScreen); } 
onTapJoinedIdeaTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.joinedIdeaTwoScreen); } 
onTapSubmittedIdeaCalenderFilterOne(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>SubmittedIdeaCalenderFilterOneBottomsheet(),isScrollControlled: true); } 
onTapHomepageSix(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageSixScreen); } 
onTapDetailIdeaIdeaDesc(BuildContext context) { Navigator.pushNamed(context, AppRoutes.detailIdeaIdeaDescScreen); } 
onTapDetailIdeaStoryBehind(BuildContext context) { Navigator.pushNamed(context, AppRoutes.detailIdeaStoryBehindScreen); } 
onTapHomepageSeven(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageSevenScreen); } 
onTapProfileThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileThreeScreen); } 
onTapTalentApprovalOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.talentApprovalOneScreen); } 
onTapTalentApprovalClickPending(BuildContext context) { Navigator.pushNamed(context, AppRoutes.talentApprovalClickPendingScreen); } 
onTapTalentApproval(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>TalentApprovalBottomsheet(),isScrollControlled: true); } 
onTapHomepageEight(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageEightScreen); } 
onTapProfileFour(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileFourScreen); } 
onTapProfileMyProfileTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileTwoScreen); } 
onTapProfileMyProfileOneTabContainer(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileOneTabContainerScreen); } 
onTapModalBGFive(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalBgFiveScreen); } 
onTapModalTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalTwoScreen); } 
onTapJoinedIdeaOne(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>JoinedIdeaOneBottomsheet(),isScrollControlled: true); } 
onTapJoinedideaIdea(BuildContext context) { Navigator.pushNamed(context, AppRoutes.joinedIdeaIdeaScreen); } 
onTapJoinedideaStoryBehind(BuildContext context) { Navigator.pushNamed(context, AppRoutes.joinedIdeaStoryBehindScreen); } 
onTapJoinedideaLeanCanvas(BuildContext context) { Navigator.pushNamed(context, AppRoutes.joinedIdeaLeanCanvasScreen); } 
onTapSubmittedIdeaTen(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: SubmittedIdeaTenDialog(),backgroundColor: Colors.transparent,)); } 
onTapSubmittedIdeaNine(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: SubmittedIdeaNineDialog(),backgroundColor: Colors.transparent,)); } 
onTapApproveRequestJoin(BuildContext context) { Navigator.pushNamed(context, AppRoutes.approveRequestJoinScreen); } 
onTapTalentApprovalView(BuildContext context) { Navigator.pushNamed(context, AppRoutes.talentApprovalViewScreen); } 
onTapTalentApprovalStoryBehind(BuildContext context) { Navigator.pushNamed(context, AppRoutes.talentApprovalStoryBehindScreen); } 
onTapTalentApprovalTeamsTabContainer(BuildContext context) { Navigator.pushNamed(context, AppRoutes.talentApprovalTeamsTabContainerScreen); } 
onTapTalentApprovalComments(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>TalentApprovalCommentsBottomsheet(),isScrollControlled: true); } 
onTapNotifApproveReq(BuildContext context) { Navigator.pushNamed(context, AppRoutes.notifApproveReqScreen); } 
onTapRejectedRequestJoin(BuildContext context) { Navigator.pushNamed(context, AppRoutes.rejectedRequestJoinScreen); } 
onTapNotifRejectReq(BuildContext context) { Navigator.pushNamed(context, AppRoutes.notifRejectReqScreen); } 
onTapProfileMyProfileThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileThreeScreen); } 
onTapProfileMyProfile(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileScreen); } 
onTapActionDetailProfile(BuildContext context) { Navigator.pushNamed(context, AppRoutes.actionDetailProfileScreen); } 
onTapSubmittedIdeaSeven(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>SubmittedIdeaSevenBottomsheet(),isScrollControlled: true); } 
onTapSubmittedIdeaEight(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>SubmittedIdeaEightBottomsheet(),isScrollControlled: true); } 
onTapModalFour(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalFourScreen); } 
onTapModalBGFour(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalBgFourScreen); } 
onTapApproveRequestLeave(BuildContext context) { Navigator.pushNamed(context, AppRoutes.approveRequestLeaveScreen); } 
onTapTalentApprovalViewOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.talentApprovalViewOneScreen); } 
onTapTalentApprovalStoryBehindOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.talentApprovalStoryBehindOneScreen); } 
onTapTalentApprovalCommentsOne(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>TalentApprovalCommentsOneBottomsheet(),isScrollControlled: true); } 
onTapApproveLeaveReq(BuildContext context) { Navigator.pushNamed(context, AppRoutes.approveLeaveReqScreen); } 
onTapRejectedRequestLeave(BuildContext context) { Navigator.pushNamed(context, AppRoutes.rejectedRequestLeaveScreen); } 
onTapProfileMyProfileNine(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileNineScreen); } 
onTapProfileMyProfileFour(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileFourScreen); } 
onTapNotifRejectLeave(BuildContext context) { Navigator.pushNamed(context, AppRoutes.notifRejectLeaveScreen); } 
onTapJoinedideaTeamsActionsFour(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: JoinedIdeaTeamsActionsFourDialog(),backgroundColor: Colors.transparent,)); } 
onTapJoinedideaTeamsActionsThree(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: JoinedIdeaTeamsActionsThreeDialog(),backgroundColor: Colors.transparent,)); } 
onTapJoinedideaTeamsActionsTwo(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: JoinedIdeaTeamsActionsTwoDialog(),backgroundColor: Colors.transparent,)); } 
onTapNotifLeaveIdea(BuildContext context) { Navigator.pushNamed(context, AppRoutes.notifLeaveIdeaScreen); } 
onTapProfileMyProfileTen(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileTenScreen); } 
onTapProfileMyProfileTwelve(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileTwelveScreen); } 
onTapModalSix(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalSixScreen); } 
onTapModalMySelf(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalMyselfScreen); } 
onTapProfileMyProfileFourteen(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: ProfileMyProfileFourteenDialog(),backgroundColor: Colors.transparent,)); } 
onTapProfileMyProfileSix(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileSixScreen); } 
onTapProfileMyProfileEight(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileEightScreen); } 
onTapModalSkills(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalSkillsScreen); } 
onTapModalNine(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalNineScreen); } 
onTapModalSkillsOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalSkillsOneScreen); } 
onTapModalSeven(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalSevenScreen); } 
onTapProfileFive(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileFiveScreen); } 
onTapProfileMyProfileAdministrator(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileAdministratorScreen); } 
onTapProfileMyProfileEleven(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileElevenScreen); } 
onTapHomepageEleven(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageElevenScreen); } 
onTapHomepageNine(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageNineScreen); } 
onTapHomepageTen(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageTenScreen); } 
onTapProfileMyProfileThirteen(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileThirteenScreen); } 
onTapProfileMyProfileFifteen(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileFifteenScreen); } 
onTapProfileMyProfileSeven(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileSevenScreen); } 
onTapProfileMyProfileFive(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileMyProfileFiveScreen); } 
onTapModalBGSix(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalBgSixScreen); } 
onTapModalEight(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalEightScreen); } 
onTapModalFive(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalFiveScreen); } 
onTapModalBG(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalBgScreen); } 
onTapProfileSix(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileSixScreen); } 
onTapIdeaManagThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.ideaManagThreeScreen); } 
onTapFilterDate(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>FilterDateBottomsheet(),isScrollControlled: true); } 
onTapTalentManagementOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.talentManagementOneScreen); } 
onTapTalentManagement(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>TalentManagementBottomsheet(),isScrollControlled: true); } 
onTapDetailTalent(BuildContext context) { Navigator.pushNamed(context, AppRoutes.detailTalentScreen); } 
onTapDashboardIdea(BuildContext context) { Navigator.pushNamed(context, AppRoutes.dashboardIdeaScreen); } 
onTapDashboardTalent(BuildContext context) { Navigator.pushNamed(context, AppRoutes.dashboardTalentScreen); } 
onTapDashboardIdeaFilter(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>DashboardIdeaFilterBottomsheet(),isScrollControlled: true); } 
onTapDashboardIdeaCalender(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>DashboardIdeaCalenderBottomsheet(),isScrollControlled: true); } 
onTapDashboardIdeaAction(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>DashboardIdeaActionBottomsheet(),isScrollControlled: true); } 
onTapDashboardTalentFilter(BuildContext context) { Navigator.pushNamed(context, AppRoutes.dashboardTalentFilterScreen); } 
onTapDashboardTalentFilterOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.dashboardTalentFilterOneScreen); } 
onTapDashboardTalentFilterTwo(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>DashboardTalentFilterTwoBottomsheet(),isScrollControlled: true); } 
onTapActionDeleteThree(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>ActionDeleteThreeBottomsheet(),isScrollControlled: true); } 
onTapActionDeleteTwo(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: ActionDeleteTwoDialog(),backgroundColor: Colors.transparent,)); } 
onTapActionDelete(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: ActionDeleteDialog(),backgroundColor: Colors.transparent,)); } 
onTapADDTALENTOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.addTalentoneScreen); } 
onTapADDTALENTTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.addTalenttwoScreen); } 
onTapSignUpOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.signUpOneScreen); } 
onTapIdeaManagTabContainer(BuildContext context) { Navigator.pushNamed(context, AppRoutes.ideaManagTabContainerScreen); } 
onTapCategoryManag(BuildContext context) { Navigator.pushNamed(context, AppRoutes.categoryManagScreen); } 
onTapActionDeleteFour(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>ActionDeleteFourBottomsheet(),isScrollControlled: true); } 
onTapProfileOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileOneScreen); } 
onTapActionDeleteOne(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>ActionDeleteOneBottomsheet(),isScrollControlled: true); } 
onTapEDITTALENTOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.editTalentoneScreen); } 
onTapEDITTALENTTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.editTalenttwoScreen); } 
onTapHomepageFive(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageFiveScreen); } 
onTapHomepageThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageThreeScreen); } 
onTapHomepageTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageTwoScreen); } 
onTapHomepageFour(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageFourScreen); } 
onTapProfileTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.profileTwoScreen); } 
onTapEventManag(BuildContext context) { Navigator.pushNamed(context, AppRoutes.eventManagScreen); } 
onTapEventManagOne(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>EventManagOneBottomsheet(),isScrollControlled: true); } 
onTapEditEventOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.editEventOneScreen); } 
onTapEditEvent(BuildContext context) { Navigator.pushNamed(context, AppRoutes.editEventScreen); } 
onTapDetailCategory(BuildContext context) { Navigator.pushNamed(context, AppRoutes.detailCategoryScreen); } 
onTapCategoryManagementAddCategoryOne(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: CategoryManagementAddCategoryOneDialog(),backgroundColor: Colors.transparent,)); } 
onTapCategoryManagementAddCategory(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: CategoryManagementAddCategoryDialog(),backgroundColor: Colors.transparent,)); } 
onTapAddEvent(BuildContext context) { Navigator.pushNamed(context, AppRoutes.addEventScreen); } 
onTapCreatedIdeaTeamsOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.createdIdeaTeamsOneScreen); } 
onTapAddanotherJourney(BuildContext context) { Navigator.pushNamed(context, AppRoutes.addAnotherJourneyScreen); } 
onTapNotifDeleteCategory(BuildContext context) { Navigator.pushNamed(context, AppRoutes.notifDeleteCategoryScreen); } 
onTapModalAddCategoryOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalAddCategoryOneScreen); } 
onTapModalAddCategory(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalAddCategoryScreen); } 
onTapEventDescManagementSubmission(BuildContext context) { Navigator.pushNamed(context, AppRoutes.eventDescManagementSubmissionScreen); } 
onTapFilterManagementSubmission(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>FilterManagementSubmissionBottomsheet(),isScrollControlled: true); } 
onTapManagementSubmission(BuildContext context) { Navigator.pushNamed(context, AppRoutes.managementSubmissionScreen); } 
onTapModalBGOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalBgOneScreen); } 
onTapNotifSavedraft(BuildContext context) { Navigator.pushNamed(context, AppRoutes.notifSaveDraftScreen); } 
onTapAddanotherjourneyOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.addAnotherJourneyOneScreen); } 
onTapCategoryManagementAddCategoryTwo(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: CategoryManagementAddCategoryTwoDialog(),backgroundColor: Colors.transparent,)); } 
onTapActionManagementSubmission(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>ActionManagementSubmissionBottomsheet(),isScrollControlled: true); } 
onTapModalBGThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalBgThreeScreen); } 
onTapNotifUnsavePage(BuildContext context) { Navigator.pushNamed(context, AppRoutes.notifUnsavePageScreen); } 
onTapModalAddCategoryTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalAddCategoryTwoScreen); } 
onTapManagementSubmissionTwo(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: ManagementSubmissionTwoDialog(),backgroundColor: Colors.transparent,)); } 
onTapManagementSubmissionOne(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: ManagementSubmissionOneDialog(),backgroundColor: Colors.transparent,)); } 
onTapModalBGTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.modalBgTwoScreen); } 
 }
